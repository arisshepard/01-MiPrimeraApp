@page "/paginasTipoUsuario"

@using _01_MiPrimeraApp.Shared;

@inject HttpClient http;

<Lista Boton=false
       Cabeceras=cabeceras
       Cargando=cargando
       ColumnasMostrar=columnasMostrar
       Combobox=tiposUsuario
       Datos=paginasTipoUsuario
       DisplayMember="Nombre"
       eventBusqueda="Buscar"
       eventEliminar="Eliminar"
       Mensaje="Seleccione tipo de usuario"
       permitirEditar=true
       permitirEliminar=true
       rutaEditar="editarPaginaTipoUsuario"
       Tipo="combobox"
       ValueMember="ID"/>

@code {
    #region "Propiedades"
    private string[] cabeceras = { "ID", "Nombre", "Tipo Usuario"};
    private bool cargando = true;
    private string[] columnasMostrar = { "ID", "Nombre", "NombreTipoUsuario"};

    private PaginaTipoUsuario[] paginasTipoUsuario;
    private TipoUsuario[] tiposUsuario;
    #endregion

    #region "Métodos"
    private async Task Buscar(string texto)
    {
        cargando = true;
        paginasTipoUsuario = await http.GetFromJsonAsync<PaginaTipoUsuario[]>($"api/PaginasTipoUsuario/Filter/{texto}");
        cargando = false;
    }

    private async Task Eliminar(string ID)
    {
        cargando = true;
        int respuesta = await http.GetFromJsonAsync<int>($"api/PaginasTipoUsuario/DeleteByID/{ID}");

        if (respuesta == 1)
        {
            paginasTipoUsuario = await http.GetFromJsonAsync<PaginaTipoUsuario[]>("api/PaginasTipoUsuario/GetAll");
        }

        cargando = false;
    }

    protected override async Task OnInitializedAsync()
    {
        paginasTipoUsuario = await http.GetFromJsonAsync<PaginaTipoUsuario[]>("api/PaginasTipoUsuario/GetAll");
        tiposUsuario = await http.GetFromJsonAsync<TipoUsuario[]>("api/TipoUsuario/GetAll");
        cargando = false;
    }
    #endregion
}
